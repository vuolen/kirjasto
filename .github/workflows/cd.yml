name: Continuous Deployment

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  repository_dispatch:
    types: [frontend_push, backend_push]


jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout kirjasto
        uses: actions/checkout@v2
        
      - name: Checkout frontend
        uses: actions/checkout@v2
        with:
          repository: vuolen/kirjasto-frontend
          path: kirjasto-frontend
          
      - name: Checkout backend
        uses: actions/checkout@v2
        with:
          repository: vuolen/kirjasto-backend
          path: kirjasto-backend
      
      - name: Run E2E tests
        run: |
          echo "FRONTEND_LOCATION=./kirjasto-frontend
            BACKEND_LOCATION=./kirjasto-backend
            POSTGRES_DB=postgres
            POSTGRES_USER=postgres
            POSTGRES_PASSWORD=e2etest
            DATABASE_URL=postgres://postgres:e2etest@localhost:5432/postgres" > config.env
          npm run start-dev && npm run e2e    
      
          
      - name: Deploy frontend
        run: |
          heroku container:login
          docker build --target prod -t registry.heroku.com/kirjasto-demo/web kirjasto-frontend
          docker push registry.heroku.com/kirjasto-demo/web
          heroku container:release web -a kirjasto-demo
        env:
          HEROKU_API_KEY: ${{secrets.HEROKU_API_KEY}}
          
      - name: Deploy backend
        run: |
          heroku container:login
          docker build --target prod -t registry.heroku.com/kirjasto-backend/web kirjasto-backend
          docker push registry.heroku.com/kirjasto-backend/web
          heroku container:release web -a kirjasto-backend
        env:
          HEROKU_API_KEY: ${{secrets.HEROKU_API_KEY}}
